name: Basic Workflow develop

#trigger
on:
    push:
       branches:
           - main

env:
    DOCKER_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/front-session13          
#push on main branch


jobs:
    run-unit-test-job:
        runs-on: ubuntu-latest
        steps:
            - name: clone source code to runner
              uses: actions/checkout@v5

            - name: install dependencies
              run: npm i

            - name: run unit test
              run: npm run test

    build-docker-image-and-push:
        runs-on: ubuntu-latest
        needs: run-unit-test-job
        steps:
            - name: clone source code to runner
              uses: actions/checkout@v5

            - name: build docker image
              run: docker build -t ${{ env.DOCKER_IMAGE }} .
            
            - name: tag docker image with version
              run: docker tag ${{ env.DOCKER_IMAGE }} ${{ env.DOCKER_IMAGE }}:v${{ github.run_number}}

            - run: docker images

            - run: echo ${{ vars.DOCKERHUB_USERNAME }}
            - run: echo ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                    username: ${{ vars.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: push docker image
              run: docker push ${{ env.DOCKER_IMAGE }}:v${{ github.run_number}}
            
            - name: push docker image with version latest
              run: docker push ${{ env.DOCKER_IMAGE }}:latest
                   

    deploy-to-vps:
        runs-on: ubuntu-latest
        needs: build-docker-image-and-push
        steps:
            - name: Execute remote SSH commands using password
              uses: appleboy/ssh-action@v1
              with:
                host: ${{ secrets.VPS_HOST }}
                username: user
                password: ${{ secrets.VPS_PASSWORD }}
                script: |
                    cd /home/user/devops-script/frontend-app/dev
                    sudo docker-compose pull
                    sudo docker-compose up -d --force-recreate --remove-orphans